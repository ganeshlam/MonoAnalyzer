/*
 * Raymond Gao, Are4Us technologies, http://are4.us
 * Copyright 2012
 */
package are4.us.mongo.gui;

import java.util.HashMap;
import javax.swing.JFrame;
import are4.us.mongo.object.MongoServerConfig;
import are4.us.mongo.object.MongoServerConfigFactory;

/**
 *
 * @author raygao2000
 */
public class AddServerConfigDialog extends javax.swing.JDialog {
    private boolean bUseReplicaSet = false;
    private boolean bUseSSHTunnel = false;
    private java.awt.Frame parentFrame = null;

    /**
     * Creates new form AddServerConfigDialog
     */
    public AddServerConfigDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parentFrame = parent;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        server = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jButtonAccept = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        alias = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        port = new javax.swing.JTextField();
        useReplicaSet = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        replica_servers = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        replica_set_name = new javax.swing.JTextField();
        use_ssh_tunnel = new javax.swing.JCheckBox();
        jButtonCancel = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Config for a new server");

        server.setText("localhost");
        server.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                serverFocusGained(evt);
            }
        });

        jLabel2.setText("Server:");

        username.setText("<username>");
        username.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                usernameFocusGained(evt);
            }
        });

        jLabel3.setText("Admin User name:");

        jLabel4.setText("Admin Password:");

        password.setText("<password>");
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
        });

        jButtonAccept.setText("Accept");
        jButtonAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAcceptActionPerformed(evt);
            }
        });

        jLabel5.setText("Alias:");

        alias.setText("<alias>");
        alias.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                aliasFocusGained(evt);
            }
        });

        jLabel6.setText("Port:");

        port.setText("27017");
        port.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                portFocusGained(evt);
            }
        });

        useReplicaSet.setText("Use Replica Set");
        useReplicaSet.setEnabled(false);
        useReplicaSet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                useReplicaSetItemStateChanged(evt);
            }
        });

        jLabel8.setText("Replica Servers:");

        replica_servers.setText("<Replica Servers>");
        replica_servers.setEnabled(false);
        replica_servers.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                replica_serversFocusGained(evt);
            }
        });

        jLabel9.setText("Replica Set Name:");

        replica_set_name.setText("<Replica Set Name>");
        replica_set_name.setEnabled(false);
        replica_set_name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                replica_set_nameFocusGained(evt);
            }
        });

        use_ssh_tunnel.setText("Use SSH Tunnel");
        use_ssh_tunnel.setEnabled(false);
        use_ssh_tunnel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                use_ssh_tunnelItemStateChanged(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(135, 135, 135)
                        .add(jLabel1))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 356, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(81, 81, 81)
                        .add(jButtonAccept)
                        .add(38, 38, 38)
                        .add(jButtonCancel)))
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                            .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 343, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jLabel3)
                                .add(jLabel4)
                                .add(jLabel5)
                                .add(jLabel2)
                                .add(jLabel6))
                            .add(43, 43, 43)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(useReplicaSet)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(server)
                                    .add(password, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                    .add(username)
                                    .add(alias, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 205, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(port, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(33, 33, 33)))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel8)
                                    .add(jLabel9))
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(48, 48, 48)
                                        .add(use_ssh_tunnel))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(18, 18, 18)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(replica_set_name, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(replica_servers, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 195, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                            .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 343, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(alias, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(server, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(port, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(username, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(password, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(useReplicaSet)
                .add(6, 6, 6)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(replica_servers, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(replica_set_name, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(use_ssh_tunnel)
                .add(18, 18, 18)
                .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonAccept)
                    .add(jButtonCancel))
                .add(33, 33, 33))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void serverFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverFocusGained
        if (this.server.getText().equals("<server>") || this.server.getText().isEmpty()) {
            this.server.setText("");
        }
    }//GEN-LAST:event_serverFocusGained

    private void usernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameFocusGained
        if (this.username.getText().equals("<username>") || this.username.getText().isEmpty()) {
            this.username.setText("");
        }
    }//GEN-LAST:event_usernameFocusGained

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        if (this.password.getText().equals("<password>") || this.password.getText().isEmpty()) {
            this.password.setText("");
        }
    }//GEN-LAST:event_passwordFocusGained

    private void jButtonAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAcceptActionPerformed
        // TODO add your handling code here:
        HashMap server_attributes = new HashMap();
        // Put elements to the map 

        server_attributes.put(MongoServerConfig.ALIAS, this.alias.getText());
        server_attributes.put(MongoServerConfig.SERVER, this.server.getText());
        server_attributes.put(MongoServerConfig.PORT, this.port.getText());
        server_attributes.put(MongoServerConfig.USERNAME, this.username.getText());
        server_attributes.put(MongoServerConfig.PASSWORD, this.password.getText());
        server_attributes.put(MongoServerConfig.USE_REPLICA_SET, this.bUseReplicaSet);
        server_attributes.put(MongoServerConfig.REPLICA_SERVER_SET, this.replica_servers.getText());
        server_attributes.put(MongoServerConfig.USE_REPLICA_SET, this.replica_set_name.getText());
        server_attributes.put(MongoServerConfig.USE_SSH, this.bUseSSHTunnel);

        MongoServerConfigFactory.upsertMongoServerConfig(server_attributes);
        this.dispose(); //accept

        System.out.println("There are " + MongoServerConfigFactory.getServerConfigList() + " MongoSevers.");
        // TODO call parent Frame update the number of server instances.
    }//GEN-LAST:event_jButtonAcceptActionPerformed

    private void aliasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_aliasFocusGained
        if (this.alias.getText().equals("<alias>") || this.alias.getText().isEmpty()) {
            this.alias.setText("");
        }
    }//GEN-LAST:event_aliasFocusGained

    private void portFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_portFocusGained
        if (this.port.getText().equals("<port>") || this.port.getText().isEmpty()) {
            this.port.setText("");
        }
    }//GEN-LAST:event_portFocusGained

    private void useReplicaSetItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_useReplicaSetItemStateChanged
        if (this.useReplicaSet.isSelected()) {
            this.bUseReplicaSet = true;
        } else {
            this.bUseReplicaSet = false;
        }
    }//GEN-LAST:event_useReplicaSetItemStateChanged

    private void replica_serversFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_replica_serversFocusGained
        if (this.replica_servers.getText().equals("<Replica Servers>") || this.replica_servers.getText().isEmpty()) {
            this.replica_servers.setText("");
        }
    }//GEN-LAST:event_replica_serversFocusGained

    private void replica_set_nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_replica_set_nameFocusGained
        if (this.replica_set_name.getText().equals("<Replica Set Name>") || this.replica_set_name.getText().isEmpty()) {
            this.replica_set_name.setText("");
        }
    }//GEN-LAST:event_replica_set_nameFocusGained

    private void use_ssh_tunnelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_use_ssh_tunnelItemStateChanged
        if (this.use_ssh_tunnel.isSelected()) {
            this.bUseSSHTunnel = true;
        } else {
            this.bUseSSHTunnel = false;
        }
    }//GEN-LAST:event_use_ssh_tunnelItemStateChanged

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose(); //cancel
    }//GEN-LAST:event_jButtonCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddServerConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddServerConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddServerConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddServerConfigDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                AddServerConfigDialog dialog = new AddServerConfigDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alias;
    private javax.swing.JButton jButtonAccept;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField port;
    private javax.swing.JTextField replica_servers;
    private javax.swing.JTextField replica_set_name;
    private javax.swing.JTextField server;
    private javax.swing.JCheckBox useReplicaSet;
    private javax.swing.JCheckBox use_ssh_tunnel;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
